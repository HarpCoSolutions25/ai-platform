name: Deploy AI Platform to ECS

on:
  push:
    branches:
      - testing

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::024209611402:role/github-action-role
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ github.event.repository.name }}-repo
        run: |
          docker build -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ github.event.repository.name }}-cluster \
            --service ${{ github.event.repository.name }}-service \
            --force-new-deployment

  wait-for-ecs:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Wait for ECS Service to Stabilize
        run: |
          echo "Waiting for ECS service to stabilize..."
          aws ecs wait services-stable \
            --cluster ${{ github.event.repository.name }}-cluster \
            --services ${{ github.event.repository.name }}-service

  run-migrations:
    runs-on: ubuntu-latest
    needs: wait-for-ecs
    steps:
      - name: Run Database Migration
        run: |
          echo "Fetching running ECS task ARN..."
          TASK_ARN=$(aws ecs list-tasks \
            --cluster ${{ github.event.repository.name }}-cluster \
            --service-name ${{ github.event.repository.name }}-service \
            --desired-status RUNNING \
            --query "taskArns[0]" --output text)

          echo "Executing database migration inside ECS container..."
          aws ecs execute-command \
            --cluster ${{ github.event.repository.name }}-cluster \
            --task "$TASK_ARN" \
            --container ${{ github.event.repository.name }}-container \
            --command "uv run alembic upgrade head" \
            --interactive
